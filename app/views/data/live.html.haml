

%html
	%head
		:css
			body {
				padding: 0;
				margin: 0;
			}
			#myCanvas {
				width: 100vw;
				height: 100vh;
			}

		= javascript_include_tag 'http://paperjs.org/assets/js/paper.js'
		= javascript_include_tag 'https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js'

		:javascript
			$(function(){

				var dims = [ '#{(params[:dims]||'x,y').split(',').first}', '#{(params[:dims]||'x,y').split(',').last}' ]
				var other_dim = '#{([ 'x','y','z' ] - [ (params[:dims]||'x,y').split(',').first,(params[:dims]||'x,y').split(',').last ]).first}'
				var dim_left = dims[0]
				var dim_bottom = dims[1]
				var last_data_point = null;

				var canvas = document.getElementById('myCanvas');
				paper.setup(canvas);
				var acceleration_path = new paper.Path();
				acceleration_path.strokeColor = 'black';

				var sum_acceleration_path = new paper.Path();
				sum_acceleration_path.strokeColor = 'red';

				var velocity_path = new paper.Path();
				velocity_path.strokeColor = 'blue';

				var acceleration_last_point = new paper.Point(paper.view.size.width / 3, paper.view.size.height / 2);
				var sum_acceleration_last_point = new paper.Point(paper.view.size.width / 3 * 2, paper.view.size.height / 2);
				var velocity_last_point = new paper.Point(paper.view.size.width / 2, paper.view.size.height / 2);

				acceleration_path.moveTo(acceleration_last_point);
				sum_acceleration_path.moveTo(sum_acceleration_last_point);
				velocity_path.moveTo(velocity_last_point);

				paper.view.draw();

				function draw_data_point( data_point ) {
					var delay = ( data_point.logged_at_from_now + 15.0 ) * 1000.0

					var draw_data_point = function(){
						acceleration_last_point = acceleration_last_point.add([ data_point['delta_acceleration_'+dim_left+'axis'] * 100, data_point['delta_acceleration_'+dim_bottom+'axis'] * 100 ])
						acceleration_path.lineTo(acceleration_last_point);

						sum_acceleration_last_point = sum_acceleration_last_point.add([ data_point['sum_delta_acceleration_'+dim_left+'axis'], data_point['sum_delta_acceleration_'+dim_bottom+'axis'] ])
						sum_acceleration_path.lineTo(sum_acceleration_last_point);

						velocity_last_point = velocity_last_point.add([ data_point['sum_delta_acceleration_'+dim_left+'axis'] * data_point.time_delta, data_point['sum_delta_acceleration_'+dim_bottom+'axis'] * data_point.time_delta ])
						velocity_path.lineTo(velocity_last_point);
					}

					if ( delay <= 0 ) {
						draw_data_point()
					} else {
						setTimeout(draw_data_point, delay )
					}
				}

				function render_data() {
					var since = ''
					var time_offset = 0

					if ( last_data_point ) {
						time_offset = last_data_point.sum_time_delta
						since = last_data_point.id
					}

					$.getJSON( "#{raw data_path( params.permit( :dims, :limit, :device_id ).merge( format: :json, tags: params[:tags] ) )}&since="+since, function( data ) {



						$(data).each(function(index,data_point){

							data_point.last_data_point = ( last_data_point || data_point )

							data_point.sum_time_delta += time_offset

							draw_data_point( data_point );

							last_data_point = data_point

						})

						setTimeout(function(){
							render_data();
						}, 1000 )
					});
				}
				render_data();
			})
	%body
		%canvas#myCanvas{ resize: true }
