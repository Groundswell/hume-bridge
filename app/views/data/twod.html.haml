

%html
	%head
		:css
			body {
				padding: 0;
				margin: 0;
				background: #eaeaea;
				width: 100vw;
				height: 100vh;
			}
			.grid {
				position: absolute;
				top: 0;
				left: 50vw;
				height: 50vh;
				width: 50vw;
				background: #eeeeee;
			}
			.circle {
				border-radius: 50%;
				background: black;
				width: 2px;
				height: 2px;
				position: absolute;
			}

	%body
		%div.grid
		= javascript_include_tag 'https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js'
		:javascript

			function color_from_integer( i ) {

				var r = 0
				var g = 0
				var b = 0

				if( i < 256 ) {
					r = i
				} else if( i < 512 ) {
					r = 255
					g = (i - 255)
				} else if( i < 768 ) {
					r = 255 - (i - 511)
					g = 255
				} else if( i < 1024 ) {
					g = 255
					b = (i - 768)
				} else if( i < 1280 ) {
					g = 255 - (i - 1023)
					b = 255
				} else if( i < 1536 ) {
					b = 255
					r = (i - 1280)
				} else if( i < 1792 ) {
					b = 255 - (i - 1535)
					r = 255
				}


				return "rgb("+r+","+g+","+b+")"
			}

			function render_data() {
				$('.grid').html('')
				var dims = [ 'acceleration_#{(params[:dims]||'x,y').split(',').first}axis', 'acceleration_#{(params[:dims]||'x,y').split(',').last}axis' ]
				var left_position = 0;
				var bottom_position = 0;
				var last_data_point = {};
				$.getJSON( "#{raw data_path( params.permit( :dims, :limit ).merge( format: :json, tags: params[:tags] ) )}", function( data ) {
					console.log(data)
					$(data).each(function(index,data_point){
						left_position += data_point[ dims[0] ] * ( last_data_point || data_point )[ dims[0] ] * 10
						bottom_position += data_point[ dims[1] ] * ( last_data_point || data_point )[ dims[1] ] * 10

						var left = left_position;
						var bottom = bottom_position;

						$('.grid').append('<div class="circle" style="left:'+left+'px;bottom:'+bottom+'px;background:'+color_from_integer(index)+'"></div>')
						//setTimeout(function(){
						//	$('.grid').append('<div class="circle" style="left:'+left+'px;bottom:'+bottom+'px;background:'+color_from_integer(index)+'"></div>')
						//}, index * (1000 / 8))

						last_data_point = data_point

					})
				});
			}
			render_data();
